---
title: "Day 2"
author: "Amy Heather"
date: "2024-07-29"
categories: [read, scope, reproduce]
bibliography: ../../../quarto_site/references.bib
---

::: {.callout-note}

Read article, decided on scope, then began reproduction. Total time used: TBCh TBCm (TBC%).

:::

## 09.38-09.43: High entropy secret

Upload of code to repository triggered a notification from GitGuardian for upload of a high entropy secret. Opening the GitGuardian dashboard, I found the source of this issue was an API key uploaded to `original_study/AAA_DES_model/input/NAAASP_Men_2020-05-11/DES_Data_Input_NAAASP_Men_30years_time_horizon_2020-05-11.R` on line 376:

`# SOURCE: Love-Koh 2015 (https://reader.elsevier.com/reader/sd/pii/S1098301515018471?token=AB11057F469D57EBE990778CCDC883E9D35D3CFD83AD143352F3AD497E822198F957DBCE2EA86AE6DC16F2F6CE350409)`

This is not a concern - the link doesn't work with that token for others.

The DOI for this article is <https://doi.org/10.1016/j.jval.2015.03.1784>.

## 09.53-09.55: Correct file paths

For `study_publication.qmd`.

## 10.05-10.15, 10.29-10.45: Read journal article

Uses a previously developed and validated model described in:

* Glover MJ, Jones E, Masconi KL, Sweeting MJ, Thompson SG. Discrete Event Simulation for Decision Modeling in Health Care: Lessons from Abdominal Aortic Aneurysm Screening. Med Decis Making. 2018; 38(4):439–51. <https://doi.org/10.1177/0272989X17753380> PMID: 31665967
* Thompson SG, Bown MJ, Glover MJ, Jones E, Masconi KL, Michaels JA, et al. Screening women aged 65 years or over for abdominal aortic aneurysm: a modelling study and health economic evaluation. Health Technol Assess. 2018; 22(43):1–142. <https://doi.org/10.3310/hta22430> PMID: 30132754

Some notes on scope (beyond obvious tables/figures):

* In-text result for `Surveillance cohort: Scan suspension` (re: breakdown of deaths by type) are not captured in tables/figures
* Supplementary figure 1 and 2 are more like methods than results? Are referenced in methods.
* In-text results for `Surveillance cohort: Drop-out` are captured in Table 3 and Figure 4
* Also captured are `Surveillance cohort: Threshold for surgery`
* Supplementary figure 3 and supplementary table 2 are definitely in scope

## 10.46-11.02: Define scope for reproduction

I described my interpretation of scope within `scope.qmd`.

## 11.09-11.13: Discussed scope with Tom

Looked over and happy with scope. He then did another look over the paper, but confirmed no further items.

## 11.26-11.32 : Archive scope

Update `CHANGELOG.md` and `CITATION.cff`, set up sync on Zenodo, then created a Git release.

## 12.50-12.56: Look over code

README:

* Directs to `NAASP_DES_Example_Script.R` which provides walk through example for running model.
* Notes the repository contains code for two papers - we are interested in `NAAASP_COVID` (rather than `SWAN`)

Copied the items relevant to NAAASP COVID into `reproduction/`. As README states results are saved to `output/`, **create a placeholder output folder**

The `models/` folder seems to contain scripts to run each of the scenarios.

## 12.57-13.04: Set up environment

Based on experience trying to backdate R and packages in my previous reproduction ([Huang et al. 2019](https://pythonhealthdatascience.github.io/stars-reproduce-huang-2019/logbook/posts/2024_07_05/)), I decided that this time I would start with the latest R and packages, and then backdate if its not working.

This means using R 4.4.1 (paper mentions 3.6.3).

At the start of each script, it lists the packages to be installed (though not versions). Created a DESCRIPTION file with these packages.

```
Title: Computational reproducibility assessment of Kim et al. 2019
Depends: 
    R
Imports:
    Rcpp,
    expm,
    msm,
    foreach,
    iterators,
    doParallel
```

Ran:

```
renv::init(bare=TRUE)
renv::install()
renv::snapshot()
```

## 13.05-13.13, 13.48-13.55, 14.07-14.21, 14.53-15.08: Trying to run model

Tried running `run_aaamodel_65yo_scen0.R`. Had error:

```
this.dir <- dirname(parent.frame(2)$ofile)
Error in dirname(parent.frame(2)$ofile) : 
  a character vector argument expected
```

Realised this has a comment above stating:

```
# Set the working directory to the root directory of AAA_DES_model (can only run this if sourcing the file)
```

So instead tried running with `Source` - this worked, up until this line:

```
> v1other
postSurgeryInitialPeriod = 0.08213552 
timeToMonitoringFollowingOpenSurgery = 0.1149897 
timeBetweenMonitoringFollowingEvarSurgery = 1 
zeroGrowthDiameterThreshold = 2 
baselineDiameters = data.frame with 2 columns:
  size = 0.7 0.8 0.9 1 1.1 1.2 1.3 1.4 ...
  weight = 2.86e-06 5.71e-06 4.43e-05 0.000351429 0.001205714 0.005032857 0.017921429 0.045698572 ...
prevalenceThreshold = 3 
aortaDiameterThresholds = list: =Error in cat(names(element)[i], "=", element[[i]], " ", sep = "") : 
  argument 3 (type 'list') cannot be handled by 'cat'
```

`v1other` was created when we called `source("input/NAAASP_Men_2020-05-11/DES_Data_Input_NAAASP_Men_30years_time_horizon_2020-05-11.R")`. Looking at that script, aortaDiameterThresholds are set as `v1other$aortaDiameterThresholds <- list(c(3.0, 4.5, 5.5))`. Viewing the object rather than printing it with `View(v1other)`, I can see that the thresholds are stored, but its just a list within a list.

I tried commenting the print statement in `run_aaamodel...` but this just led to a later error for the same variable when it is used. As such, I instead altered assignment of this variable in the sourced script to `c(3.0, 4.5, 5.5)` (removing `list()`).

This then ran without issue. As it ran, I can see it sets a random seed (`set.seed(3210)`). As per usual, paused timing while it ran.

Spent a long while on `processPersons()` (`scen0.invite <- processPersons(v0, v1other, v2, personData.screen)`). At 13.48 (with model running since 13.13), I could see these would likely be slow models to run, so logged into the remote computer, cloned the GitHub repository there, and ran the next script starting at 13.55, `run_aaamodel_65yo_scen0.R`. To do so, after cloning, I ran:

```
cd stars-reproduce-kim-2021/reproduction
Rscript -e "renv::restore()"
Rscript -e "source('models/NAAASP_COVID_modelling/run_aaamodel_65yo_scen1.R')"
```

::: {.callout-tip}
## Reflection

Including the expected run time would be handy, as I assume this is working fine, but that's working on the assumption that these models take a long time to run (which I'm not sure yet whether that is the case or not).

In this case, as I later found out they used HPC, it would've been beneficial to mention that also!

:::

I checked the `run_aaamodel...` scripts and realised that in each, none were using parallel processing (as `v0$method <- "serial"`).

Looking at the DES_Model code I can see the example of `processPersons()` allows three possible inputs:

* "serial"
* "parallel" (which uses parallel)
* "foreach" (which uses doParallel)

The function `psa()` is the same, but also includes "parallelBatches" alongside "foreach". However, the consequence of those inputs is to return an error that the method has not been implemented for psa. Hence, psa can only run with "serial" or "parallel". Likewise for `psaAboveDiagnosisThreshold()`.

At 14.16 (so having let the model run since 13.55, for 21 minutes), I cancelled the run on the remote computer, and altered the scenario script to set `v0$method <- "parallel"`. Then set that running, starting at 14.21. At this moment, the first scenario was still running on my machine (since 13.13, so for apx. 1h 10m now).

At 14.39, I noticed the parallel model said `Killed`. In case I might have accidentally done this, I just set it to rerun again. However, at 14.52, it showed as `Killed` again. Upon Googling, I can see this message occurs when you run out of memory - which perhaps, might be why all were set to run sequentially, if its too intensive to run in parallel. I switched it back to "serial".

However, the model still running on my machine has now been going for 1h 42m. Having looked in the repository and article for any indication of runtime or requirement of HPC, I've yet to find anything. I tried looking now at the article first describing the model (<https://doi.org/10.1177/0272989X17753380>). In this article, they state the run time:

```
However, the computational requirements of the DES were extensive, given the number of individuals needed to reduce sampling variation to an acceptable level and characterizing uncertainty through PSA. Run time was in the region of 24 h to run the model with 500,000 patients and 1,000 PSA iterations, even with parallelization and the use of a high-powered computer.
```

In this case, "each scenario model is run for 10 million hypothetical individuals randomly drawn with replacement from the distribution of the relevant population. The models are run for a period of 30 years". However, as there is no mention of performing probabilistic sensitivity analysis iterations in the article, we could expect this to be quicker than that (although note it is 10m patients instead of 500k).

Discussed with Tom and agreed to:

* (A) Try and just run it with very few people, just so we can see if the model is working, and whether we could get similar results with fewer people in the model
* (B) Try and run it sequentially on the remote computer overnight

## 15.09-X: Running the model with fewer people


## Timings

```{python}
import sys
sys.path.append('../')
from timings import calculate_times

# Minutes used prior to today
used_to_date = 32

# Times from today
times = [
    ('09.38', '09.43'),
    ('09.53', '09.55'),
    ('10.05', '10.15'),
    ('10.29', '10.45'),
    ('10.46', '11.02'),
    ('11.09', '11.13'),
    ('11.26', '11.32')]

calculate_times(used_to_date, times)
```